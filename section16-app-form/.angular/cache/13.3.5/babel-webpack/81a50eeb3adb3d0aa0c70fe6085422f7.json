{"ast":null,"code":"import _classCallCheck from \"E:\\\\Coding\\\\Angular\\\\section16-app-form\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"E:\\\\Coding\\\\Angular\\\\section16-app-form\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormArray, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { RecipeService } from \"../recipe.service\";\n\nvar RecipeEditComponent = /*#__PURE__*/function () {\n  function RecipeEditComponent(route, recipeService, router) {\n    _classCallCheck(this, RecipeEditComponent);\n\n    this.route = route;\n    this.recipeService = recipeService;\n    this.router = router;\n    this.editMode = false;\n  }\n\n  _createClass(RecipeEditComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.route.params.subscribe(function (params) {\n        _this.id = +params['id'];\n        _this.editMode = params['id'] != null;\n\n        _this.initForm();\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      // const newRecipe = new Recipe(\n      //   this.recipeForm.value['name'],\n      //   this.recipeForm.value['description'],\n      //   this.recipeForm.value['imagePath'],\n      //   this.recipeForm.value['ingredients']\n      // );\n      if (this.editMode) {\n        this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n      } else {\n        this.recipeService.addRecipe(this.recipeForm.value);\n      }\n    }\n  }, {\n    key: \"onAddIngredient\",\n    value: function onAddIngredient() {\n      this.recipeForm.get('ingredients').push(new FormGroup({\n        'name': new FormControl(null, Validators.required),\n        'amount': new FormControl(null, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n      }));\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.router.na;\n    }\n  }, {\n    key: \"initForm\",\n    value: function initForm() {\n      var recipeName = '';\n      var recipeImagePath = '';\n      var recipeDescription = '';\n      var recipeIngredients = new FormArray([]);\n\n      if (this.editMode) {\n        var recipe = this.recipeService.getRecipe(this.id);\n        recipeName = recipe.name;\n        recipeImagePath = recipe.imagePath;\n        recipeDescription = recipe.description;\n\n        if (recipe['ingredients']) {\n          // push FormGroup<'name', 'amount'> into the FormArray which\n          recipe.ingredients.forEach(function (ingredient) {\n            recipeIngredients.push(new FormGroup({\n              'name': new FormControl(ingredient.name, Validators.required),\n              'amount': new FormControl(ingredient.amount, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n            }));\n          });\n        }\n      } // Create a reactive form for Recipe\n\n\n      this.recipeForm = new FormGroup({\n        'name': new FormControl(recipeName, Validators.required),\n        'imagePath': new FormControl(recipeImagePath, Validators.required),\n        'description': new FormControl(recipeDescription, Validators.required),\n        'ingredients': recipeIngredients\n      });\n    }\n  }, {\n    key: \"ingredientsFormControls\",\n    get: function get() {\n      return this.recipeForm.get('ingredients').controls;\n    }\n  }]);\n\n  return RecipeEditComponent;\n}();\n\nRecipeEditComponent = __decorate([Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n}), __metadata(\"design:paramtypes\", [ActivatedRoute, RecipeService, Object])], RecipeEditComponent);\nexport { RecipeEditComponent };","map":null,"metadata":{},"sourceType":"module"}